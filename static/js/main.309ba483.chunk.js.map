{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","value","handleSubmit","bind","event","this","setState","target","preventDefault","console","log","Wrapper","className","type","onClick","url","width","height","id","display","position","href","React","Component","styled","div","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.309ba483.chunk.js","sourcesContent":["\nimport React from 'react'\nimport styled from 'styled-components'\nimport Iframe from 'react-iframe'\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: ''\n    }\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleSubmit(event) {\n    this.setState({\n      value: event.target.value\n    })\n    event.preventDefault()\n  }\n\n  render() {\n    console.log('STATE', this.state)\n    if (this.state.value === '') {\n      return (\n        <Wrapper>\n          <div className=\"page\">\n            <div className=\"heading\">\n              <div className=\"alternaburger_logo\">\n                {/* <h1>AlternaBurger</h1>\n                 <p>A search engine for plant based alternatives, even more delicious</p> */}\n              </div>\n            </div>\n            <div className=\"meatParent\">\n              <div className=\"center-text\">\n                <div className=\"button-group\">\n                  <button\n                    type=\"submit\"\n                    value=\"Stone Soup Story\"\n                    onClick={this.handleSubmit}\n                  >\n                    Stone Soup Story\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"How To Play\"\n                    onClick={this.handleSubmit}\n                  >\n                    How To Play\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"Donate Here\"\n                    onClick={this.handleSubmit}\n                  >\n                    Donate Here\n                  </button>\n                </div>\n                <div className=\"vegan\">\n                  Your goal is to get as many vegetables as possible by catching\n                  falling stones and putting them in a soup pot.\n                  <br />\n                  <br />\n                  Instructions:\n                  <br />\n                  <br />\n                  1. Click 'Start Game' to begin\n                  <br />\n                  2. Use the LEFT and RIGHT arrow keys to move, use the UP arrow\n                  key to jump\n                  <br />\n                  3. Catch the falling stones and put them in the soup pot by\n                  pressing the DOWN arrow key\n                  <br />\n                  4. If a stone hits the ground the game will end\n                  {/* <Iframe url={urlObj.buy}\n                    width=\"450px\"\n                    height=\"450px\"\n                    id=\"myId\"\n                    className=\"myClassname\"\n                    display=\"initial\"\n                    position=\"relative\"/> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Wrapper>\n      )\n    } else if (this.state.value === 'Stone Soup Story') {\n      return (\n        <Wrapper>\n          <div className=\"page\">\n            <div className=\"heading\">\n              <div className=\"alternaburger_logo\">\n                {/* <h1>AlternaBurger</h1>\n               <p>A search engine for plant based alternatives, even more delicious</p> */}\n              </div>\n            </div>\n            <div className=\"meatParent\">\n              <div className=\"center-text\">\n                <div className=\"button-group\">\n                  <button\n                    type=\"submit\"\n                    value=\"Stone Soup Story\"\n                    onClick={this.handleSubmit}\n                  >\n                    Stone Soup Story\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"How To Play\"\n                    onClick={this.handleSubmit}\n                  >\n                    How To Play\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"Donate Here\"\n                    onClick={this.handleSubmit}\n                  >\n                    Donate Here\n                  </button>\n                </div>\n                <div>\n                  <Iframe\n                    url=\"https://en.wikipedia.org/wiki/Stone_Soup\"\n                    width=\"450px\"\n                    height=\"450px\"\n                    id=\"myId\"\n                    className=\"myClassname\"\n                    display=\"initial\"\n                    position=\"relative\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Wrapper>\n      )\n    } else if (this.state.value === 'How To Play') {\n      return (\n        <Wrapper>\n          <div className=\"page\">\n            <div className=\"heading\">\n              <div className=\"alternaburger_logo\">\n                {/* <h1>AlternaBurger</h1>\n               <p>A search engine for plant based alternatives, even more delicious</p> */}\n              </div>\n            </div>\n            <div className=\"meatParent\">\n              <div className=\"center-text\">\n                <div className=\"button-group\">\n                  <button\n                    type=\"submit\"\n                    value=\"Stone Soup Story\"\n                    onClick={this.handleSubmit}\n                  >\n                    Stone Soup Story\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"How To Play\"\n                    onClick={this.handleSubmit}\n                  >\n                    How To Play\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"Donate Here\"\n                    onClick={this.handleSubmit}\n                  >\n                    Donate Here\n                  </button>\n                </div>\n                <div className=\"vegan\">\n                  Your goal is to get as many vegetables as possible by catching\n                  falling stones and putting them in a soup pot.\n                  <br />\n                  <br />\n                  Instructions:\n                  <br />\n                  <br />\n                  1. Click 'Start Game' to begin\n                  <br />\n                  2. Use the LEFT and RIGHT arrow keys to move, use the UP arrow\n                  key to jump\n                  <br />\n                  3. Catch the falling stones and put them in the soup pot by\n                  pressing the DOWN arrow key\n                  <br />\n                  4. If a stone hits the ground the game will end\n                  {/* <Iframe url={urlObj.buy}\n                  width=\"450px\"\n                  height=\"450px\"\n                  id=\"myId\"\n                  className=\"myClassname\"\n                  display=\"initial\"\n                  position=\"relative\"/> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Wrapper>\n      )\n    } else if (this.state.value === 'Donate Here') {\n      return (\n        <Wrapper>\n          <div className=\"page\">\n            <div className=\"heading\">\n              <div className=\"alternaburger_logo\">\n                {/* <h1>AlternaBurger</h1>\n               <p>A search engine for plant based alternatives, even more delicious</p> */}\n              </div>\n            </div>\n            <div className=\"meatParent\">\n              <div className=\"center-text\">\n                <div className=\"button-group\">\n                  <button\n                    type=\"submit\"\n                    value=\"Stone Soup Story\"\n                    onClick={this.handleSubmit}\n                  >\n                    Stone Soup Story\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"How To Play\"\n                    onClick={this.handleSubmit}\n                  >\n                    How To Play\n                  </button>\n                  <button\n                    type=\"submit\"\n                    value=\"Donate Here\"\n                    onClick={this.handleSubmit}\n                  >\n                    Donate Here\n                  </button>\n                </div>\n                <div className=\"vegan\">\n                  If you enjoy the stone soup game, donate to an organization\n                  fighting food insecurity during COVID-19 here:\n                  <br></br>\n                  <br></br>\n                  <a href=\"https://www.feedingamerica.org/\">https://www.feedingamerica.org/</a>\n                  {/* <Iframe url=\"https://www.feedingamerica.org/take-action/coronavirus\"\n                  width=\"450px\"\n                  height=\"450px\"\n                  id=\"myId\"\n                  className=\"myClassname\"\n                  display=\"initial\"\n                  position=\"relative\"/> */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </Wrapper>\n      )\n    }\n  }\n}\n\nconst Wrapper = styled.div`\n\n.page {\n  background-color: #282c34;\n}\n\n.heading {\n  color: white;\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  justify-content: flex-start;\n}\n\n.center-text {\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin: 0px 10px 900px 10px;\n}\n\n.meatParent .thisPageImage img:hover {\n  animation-name: pulse;\n  animation-duration: 3s;\n  animation-iteration-count: infinite;\n}\n\n.alternaburger_logo {\n  align-self: center;\n}\n\n// img:hover {\n//   animation-duration: 20s;\n//   animation-name: bounceIn;\n// }\n\n// .burger {\n//   animation-duration: 20s;\n//   animation-name: bounceIn;\n// }\n\n// @media (prefers-reduced-motion: no-preference) {\n//   .burger {\n//     animation: App-logo-spin infinite 20s linear;\n//   }\n// }\n\n.button-group {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  button {\n    font-family: 'Helvetica Neue';\n    font-weight: 200;\n    font-size: 20px;\n    background-color: rgba(42, 187, 155, 1);\n    color: black;\n    margin: 0px 10px 0px 10px;\n    width: 100px;\n    border-radius: 10%;\n  }\n\n  .vegan {\n    font-family: 'Helvetica Neue';\n    font-weight: 200;\n    font-size: 20px;\n    color: black;\n    // border-radius: 10%;\n    width: 430px;\n    height: 430px;\n    border: 1px solid white;\n    background-color: white;\n    padding: 10px 10px 10px 10px;\n}\n\n\nbutton:hover {\n    background-color: #006400\n}\n\n\n.meatParent{\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  margin: 0px 20px 20px 20px;\n}\n\n.meatParent .thisPageImage{\n    width: 450px;\n    height: 450px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .meatParent .thisPageImage img{\n    width: 100%;\n    height: auto;\n  }\n\n\n\n.question {\n  font-family: 'Helvetica Neue';\n  font-weight: 400;\n  font-size: 50px;\n  color: white;\n  position: absolute;\n  self-align: center;\n  text-align: center;\n  // background-color:\n  // background: rgba(255,165,0,0.75);\n  width: 75%;\n  top:25%;\n  transform:translateY(-50%);\n  margin: 0;\n\n\n  // background-color: #EEEEEE;\n  // position: absolute;\n  // align-self: center;\n  // z-index:100;\n}\n}\n`\n\nexport default App\n\n// import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}